<!doctype html>
<html lang="en">
  <head>
    
  <style>
      .field
      {
          margin-top:15px;
        
      }
      .field input
      {   margin-left: 5px;
          height: 50px;
          width: 320px;
          border-radius: 10px 10px 10px 10px;
          border: 0px;
         
      }
      .field input::selection
      {border: 0px;}
      .field input[type="submit"]
      {   
          background-color: #32CD32;
          border:0px;
          opacity: 0.8;
      }
      .submit-button button
      {
          background-color: #32CD32;
          
          opacity: 1;
      }
      .frame
      {   width: 380px;
          height: 320px;
          left: 0px;
          float: left;
          position: absolute;
          overflow: hidden;
          box-shadow:  0.1em 0.1em 5px  #6a6a6a;
          background-color: #ADFF2F;
          z-index: 9999999;
          position: relative;
         
          
      }
      .mapcontainer
      {   position: absolute;
         
         z-index: 0;
      }
      
  </style>
  
  </head>
  <body>
    
  <div id="map" class="mapcontainer" style="width: 100%; height: 100%"></div>
  <div class="frame">
    
  
  <div class="field"> 
    <input type="text" id="field-from" placeholder="От:"/>
</div>
<div class="field">
    <input type="text" id="field-to" placeholder="До:"/>
</div>
<div class="submit-button">
    <button onclick="submit_button_onclick()">Build route</button>
</div>

  </div>
 
    

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/openlayers/4.6.4/ol.css" type="text/css">
  <script type="text/javascript" src="https://gc.kis.v2.scr.kaspersky-labs.com/FD126C42-EBFA-4E12-B309-BB3FDD723AC1/main.js?attr=9MFEchgQdxqijc3zglnalabfqRjUxlK_CaIIvAWskVoZuSBNtNKJs4-8W8XXIJEx0YsjINzsgk2OOJf4DiV2nJB3lTqxgbNNqMXrs5pJIF0jMmizOPupZ6xNGUXzXHfJZRUKi1mJPvbdq2TqhTE1Ug" charset="UTF-8"></script><style>
    .map {
      height: 400px;
      width: 100%;
    }
  </style>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/openlayers/4.6.4/ol.js"></script>
  
  <script type="text/javascript">
  function submit_button_onclick()
  {
    var addressFromField = document.getElementById("field-from");
    var addressToField = document.getElementById("field-to");
    var addressFrom = addressFromField.value;
    var addressTo = addressToField.value;
    console.log(addressFromField);
    console.log(addressToField);
    console.log(addressFrom);
    console.log(addressTo);
    if (addressTo == undefined || addressTo == null)
      {
        console.log("Error");
        return;
      }
    var map = new ol.Map({
      target: 'map',
      layers: [
        new ol.layer.Tile({
          source: new ol.source.OSM()
        })
      ],
      view: new ol.View({
        center: ol.proj.fromLonLat([53.75, 37.61]),
        zoom: 8
      })
    });
// Москва, Пушкинская 4
// Москва, Новгородская, 5
      //var requestURL = 'http://128.72.116.189:55055/GetRoute?longitudeStart=37.623654&latitudeStart=55.735615&longitudeFinish=37.613247&latitudeFinish=55.755614';
      var requestURL = 'http://128.72.116.189:55055/GetRoute?addressFrom=' + encodeURIComponent(addressFrom) + '&addressTo=' + encodeURIComponent(addressTo);
      var request = new XMLHttpRequest();
      request.open('GET', requestURL, false);
      //request.open('GET', 'C:\Users\VadostR\Downloads\4d683ae98fb30e5a.json', false);
     // request.responseType ='json';
      request.send();
      
      console.log("Response : " + request.response);
      var cooordinates = JSON.parse(request.response);
      
      //var cooordinates = JSON.parse('{"ToBicycleParking":[[37.624176,55.735634],[37.62417,55.7358],[37.624176,55.73616],[37.62418,55.73646],[37.624184,55.73653],[37.624123,55.73653],[37.62352,55.73653],[37.623455,55.73653],[37.6231,55.736546],[37.622585,55.73655],[37.62255,55.736767],[37.622505,55.736843],[37.622337,55.736908],[37.621967,55.736927],[37.621082,55.73684],[37.620354,55.736767],[37.620235,55.736755],[37.620285,55.736507],[37.619583,55.73637],[37.61953,55.736347],[37.61958,55.736187]],"FromParkingToParking":[[37.61958,55.736187],[37.61953,55.736347],[37.619583,55.73637],[37.620285,55.736507],[37.620235,55.736755],[37.620163,55.737095],[37.61992,55.738174],[37.61988,55.738316],[37.619766,55.73857],[37.619637,55.738815],[37.619614,55.73887],[37.621326,55.739117],[37.622997,55.739323],[37.62438,55.739304],[37.624382,55.739346],[37.62446,55.739918],[37.62458,55.740383],[37.62463,55.74046],[37.624672,55.74046],[37.624714,55.740532],[37.62472,55.740536],[37.624805,55.740894],[37.624817,55.740948],[37.624832,55.741013],[37.624886,55.74125],[37.624905,55.741337],[37.62493,55.74147],[37.624947,55.74158],[37.62495,55.74167],[37.624966,55.741966],[37.624966,55.742065],[37.62497,55.74229],[37.624973,55.742393],[37.624973,55.742462],[37.624943,55.742714],[37.624924,55.74292],[37.62491,55.743053],[37.62488,55.74329],[37.624855,55.743576],[37.62483,55.743828],[37.624836,55.743874],[37.62484,55.743896],[37.624832,55.74398],[37.624825,55.744053],[37.6248,55.744186],[37.62484,55.74419],[37.62482,55.744274],[37.62477,55.74447],[37.624763,55.744488],[37.62468,55.744762],[37.624607,55.745],[37.62459,55.745083],[37.624577,55.745197],[37.624603,55.74536],[37.624702,55.74569],[37.624718,55.745766],[37.624718,55.74584],[37.624695,55.74621],[37.624672,55.74636],[37.624653,55.746513],[37.624645,55.746616],[37.62462,55.74681],[37.624477,55.7482],[37.62431,55.74995],[37.62414,55.75134],[37.62419,55.75152],[37.62417,55.751865],[37.62415,55.752155],[37.62398,55.752308],[37.623775,55.75257],[37.623672,55.752686],[37.623085,55.75315],[37.62254,55.753525],[37.622517,55.753544],[37.622513,55.7536],[37.622536,55.753624],[37.62258,55.75365],[37.62251,55.753708],[37.622383,55.75365],[37.62229,55.75364],[37.622246,55.753613],[37.622166,55.753593],[37.622086,55.753582],[37.619156,55.755047],[37.61903,55.75511],[37.61895,55.755154],[37.618855,55.755207],[37.618793,55.755238],[37.618427,55.755436],[37.61838,55.755455],[37.6181,55.75554],[37.61801,55.755585],[37.61788,55.75567],[37.61774,55.75575],[37.617672,55.755833]],"FromParkingToFinish":[[37.617672,55.755833],[37.617516,55.755924],[37.61746,55.755962],[37.617184,55.756107],[37.617035,55.756145],[37.616722,55.756237],[37.616497,55.7563],[37.616314,55.756405],[37.616436,55.756466],[37.61649,55.756504],[37.61631,55.756603],[37.616,55.756763],[37.61596,55.756737],[37.615902,55.756763],[37.61581,55.756805],[37.615776,55.75682],[37.61575,55.75682],[37.615685,55.756783],[37.615658,55.756786],[37.61532,55.756954],[37.615284,55.756966],[37.615116,55.75705],[37.614956,55.75703],[37.61493,55.757042],[37.614883,55.75707],[37.614872,55.75706],[37.614773,55.757042],[37.614594,55.757057],[37.614487,55.756992],[37.614513,55.75698],[37.614567,55.756947],[37.614574,55.756935],[37.614525,55.7569],[37.61448,55.7569],[37.614483,55.756844],[37.614468,55.756824],[37.613873,55.756424],[37.613815,55.756386],[37.613354,55.755947],[37.613003,55.75563],[37.61307,55.755596],[37.613224,55.75555]],"StraightBetweenStartAndFinish":null}')
      console.log("Status : "+request.status);
      console.log("Response : "+cooordinates);
      
      function drawLine(coordArr,color = '#d12710',width = 3) {
      var step;
	    for (step = 0; step < coordArr.length-1; step++) {
      var lonlat = ol.proj.fromLonLat([coordArr[step][0], coordArr[step][1] ]);
      var location2 = ol.proj.fromLonLat([coordArr[step+1][0], coordArr[step+1][1]]);
      var linie2style = [
				// linestring
				new ol.style.Style({
				  stroke: new ol.style.Stroke({
					color: color,
					width: width
				  })
				})
			  ];
			  			
			var linie2 = new ol.layer.Vector({
					source: new ol.source.Vector({
					features: [new ol.Feature({
						geometry: new ol.geom.LineString([lonlat, location2]),
						name: 'Line',
					})]
				})
			});
			
			linie2.setStyle(linie2style);
			map.addLayer(linie2);
      }
      return;
      }

      if( cooordinates.ToBicycleParking != null && cooordinates.FromParkingToParking != null && cooordinates.FromParkingToFinish != null)
      {
        drawLine(cooordinates.ToBicycleParking, '#d12710', 3);  //red
        drawLine(cooordinates.FromParkingToParking,'#10bad1', 3); //blue
        drawLine(cooordinates.FromParkingToFinish,'#d12710', 3);  //red
      }
      else if (cooordinates.StraightBetweenStartAndFinish != null)
      {
        drawLine(cooordinates.StraightBetweenStartAndFinish);
      }
  }
  </script>
  </body>
</html>